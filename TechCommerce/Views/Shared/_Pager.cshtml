@model ProductsSearchPagerViewModel

<div class="container">
    @if (Model.Pager.TotalPages > 1)
    {
        <ul class="pagination justify-content-end">

            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Product" asp-action="index" asp-route-pg="1" asp-route-searchQuery="@Model.SearchQuery" asp-route-categoryId="@Model.CategoryId">First</a>
                </li>

                <li>
                    <a class="page-link" asp-controller="Product" asp-action="index" asp-route-pg="@(Model.Pager.CurrentPage - 1)" asp-route-searchQuery="@Model.SearchQuery" asp-route-categoryId="@Model.CategoryId">
                        previous
                    </a>
                </li>
            }


            @for (var pge = Model.Pager.StartPage; pge <= Model.Pager.EndPage; pge++)
            {
                <li class="page-item @(pge == Model.Pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Product" asp-action="index" asp-route-pg="@pge" asp-route-searchQuery="@Model.SearchQuery" asp-route-categoryId="@Model.CategoryId">@pge</a>
                </li>
            }

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Product" asp-action="index" asp-route-pg="@(Model.Pager.CurrentPage +1)" asp-route-searchQuery="@Model.SearchQuery" asp-route-categoryId="@Model.CategoryId">
                        Next
                    </a>
                </li>

                <li class="page-item">
                    <a class="page-link" asp-controller="Product" asp-action="index" asp-route-pg="@(Model.Pager.TotalPages)" asp-route-searchQuery="@Model.SearchQuery" asp-route-categoryId="@Model.CategoryId">
                        Last
                    </a>
                </li>
            }
        </ul>
    }

</div>